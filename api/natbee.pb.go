// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.23.0
// 	protoc        v3.12.3
// source: natbee.proto

package natbeeapi

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type ServiceType int32

const (
	ServiceType_DEFAULT ServiceType = 0
	ServiceType_NAT     ServiceType = 1
	ServiceType_FNAT    ServiceType = 2
)

// Enum value maps for ServiceType.
var (
	ServiceType_name = map[int32]string{
		0: "DEFAULT",
		1: "NAT",
		2: "FNAT",
	}
	ServiceType_value = map[string]int32{
		"DEFAULT": 0,
		"NAT":     1,
		"FNAT":    2,
	}
)

func (x ServiceType) Enum() *ServiceType {
	p := new(ServiceType)
	*p = x
	return p
}

func (x ServiceType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ServiceType) Descriptor() protoreflect.EnumDescriptor {
	return file_natbee_proto_enumTypes[0].Descriptor()
}

func (ServiceType) Type() protoreflect.EnumType {
	return &file_natbee_proto_enumTypes[0]
}

func (x ServiceType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ServiceType.Descriptor instead.
func (ServiceType) EnumDescriptor() ([]byte, []int) {
	return file_natbee_proto_rawDescGZIP(), []int{0}
}

type Protocol int32

const (
	Protocol_INVALID Protocol = 0
	Protocol_TCP     Protocol = 6
	Protocol_UDP     Protocol = 17
)

// Enum value maps for Protocol.
var (
	Protocol_name = map[int32]string{
		0:  "INVALID",
		6:  "TCP",
		17: "UDP",
	}
	Protocol_value = map[string]int32{
		"INVALID": 0,
		"TCP":     6,
		"UDP":     17,
	}
)

func (x Protocol) Enum() *Protocol {
	p := new(Protocol)
	*p = x
	return p
}

func (x Protocol) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Protocol) Descriptor() protoreflect.EnumDescriptor {
	return file_natbee_proto_enumTypes[1].Descriptor()
}

func (Protocol) Type() protoreflect.EnumType {
	return &file_natbee_proto_enumTypes[1]
}

func (x Protocol) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Protocol.Descriptor instead.
func (Protocol) EnumDescriptor() ([]byte, []int) {
	return file_natbee_proto_rawDescGZIP(), []int{1}
}

type Empty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Empty) Reset() {
	*x = Empty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_natbee_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_natbee_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_natbee_proto_rawDescGZIP(), []int{0}
}

type ServiceKey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ip       string   `protobuf:"bytes,1,opt,name=ip,proto3" json:"ip,omitempty"`
	Port     uint32   `protobuf:"varint,2,opt,name=port,proto3" json:"port,omitempty"`
	Protocol Protocol `protobuf:"varint,3,opt,name=protocol,proto3,enum=natbeeapi.Protocol" json:"protocol,omitempty"`
}

func (x *ServiceKey) Reset() {
	*x = ServiceKey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_natbee_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServiceKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceKey) ProtoMessage() {}

func (x *ServiceKey) ProtoReflect() protoreflect.Message {
	mi := &file_natbee_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceKey.ProtoReflect.Descriptor instead.
func (*ServiceKey) Descriptor() ([]byte, []int) {
	return file_natbee_proto_rawDescGZIP(), []int{1}
}

func (x *ServiceKey) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *ServiceKey) GetPort() uint32 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *ServiceKey) GetProtocol() Protocol {
	if x != nil {
		return x.Protocol
	}
	return Protocol_INVALID
}

type Session struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClientIp    string   `protobuf:"bytes,1,opt,name=client_ip,json=clientIp,proto3" json:"client_ip,omitempty"`
	ClientPort  uint32   `protobuf:"varint,2,opt,name=client_port,json=clientPort,proto3" json:"client_port,omitempty"`
	VirtualIp   string   `protobuf:"bytes,3,opt,name=virtual_ip,json=virtualIp,proto3" json:"virtual_ip,omitempty"`
	VirtualPort uint32   `protobuf:"varint,4,opt,name=virtual_port,json=virtualPort,proto3" json:"virtual_port,omitempty"`
	LocalIp     string   `protobuf:"bytes,5,opt,name=local_ip,json=localIp,proto3" json:"local_ip,omitempty"`
	LocalPort   uint32   `protobuf:"varint,6,opt,name=local_port,json=localPort,proto3" json:"local_port,omitempty"`
	RealIp      string   `protobuf:"bytes,7,opt,name=real_ip,json=realIp,proto3" json:"real_ip,omitempty"`
	RealPort    uint32   `protobuf:"varint,8,opt,name=real_port,json=realPort,proto3" json:"real_port,omitempty"`
	Protocol    Protocol `protobuf:"varint,9,opt,name=protocol,proto3,enum=natbeeapi.Protocol" json:"protocol,omitempty"`
}

func (x *Session) Reset() {
	*x = Session{}
	if protoimpl.UnsafeEnabled {
		mi := &file_natbee_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Session) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Session) ProtoMessage() {}

func (x *Session) ProtoReflect() protoreflect.Message {
	mi := &file_natbee_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Session.ProtoReflect.Descriptor instead.
func (*Session) Descriptor() ([]byte, []int) {
	return file_natbee_proto_rawDescGZIP(), []int{2}
}

func (x *Session) GetClientIp() string {
	if x != nil {
		return x.ClientIp
	}
	return ""
}

func (x *Session) GetClientPort() uint32 {
	if x != nil {
		return x.ClientPort
	}
	return 0
}

func (x *Session) GetVirtualIp() string {
	if x != nil {
		return x.VirtualIp
	}
	return ""
}

func (x *Session) GetVirtualPort() uint32 {
	if x != nil {
		return x.VirtualPort
	}
	return 0
}

func (x *Session) GetLocalIp() string {
	if x != nil {
		return x.LocalIp
	}
	return ""
}

func (x *Session) GetLocalPort() uint32 {
	if x != nil {
		return x.LocalPort
	}
	return 0
}

func (x *Session) GetRealIp() string {
	if x != nil {
		return x.RealIp
	}
	return ""
}

func (x *Session) GetRealPort() uint32 {
	if x != nil {
		return x.RealPort
	}
	return 0
}

func (x *Session) GetProtocol() Protocol {
	if x != nil {
		return x.Protocol
	}
	return Protocol_INVALID
}

type ServiceAttr struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LocalIp       string   `protobuf:"bytes,1,opt,name=local_ip,json=localIp,proto3" json:"local_ip,omitempty"`
	RealPort      uint32   `protobuf:"varint,2,opt,name=real_port,json=realPort,proto3" json:"real_port,omitempty"`
	RealServerIps []string `protobuf:"bytes,5,rep,name=real_server_ips,json=realServerIps,proto3" json:"real_server_ips,omitempty"`
}

func (x *ServiceAttr) Reset() {
	*x = ServiceAttr{}
	if protoimpl.UnsafeEnabled {
		mi := &file_natbee_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServiceAttr) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceAttr) ProtoMessage() {}

func (x *ServiceAttr) ProtoReflect() protoreflect.Message {
	mi := &file_natbee_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceAttr.ProtoReflect.Descriptor instead.
func (*ServiceAttr) Descriptor() ([]byte, []int) {
	return file_natbee_proto_rawDescGZIP(), []int{3}
}

func (x *ServiceAttr) GetLocalIp() string {
	if x != nil {
		return x.LocalIp
	}
	return ""
}

func (x *ServiceAttr) GetRealPort() uint32 {
	if x != nil {
		return x.RealPort
	}
	return 0
}

func (x *ServiceAttr) GetRealServerIps() []string {
	if x != nil {
		return x.RealServerIps
	}
	return nil
}

type AddRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type ServiceType  `protobuf:"varint,1,opt,name=type,proto3,enum=natbeeapi.ServiceType" json:"type,omitempty"`
	Key  *ServiceKey  `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	Val  *ServiceAttr `protobuf:"bytes,3,opt,name=val,proto3" json:"val,omitempty"`
}

func (x *AddRequest) Reset() {
	*x = AddRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_natbee_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddRequest) ProtoMessage() {}

func (x *AddRequest) ProtoReflect() protoreflect.Message {
	mi := &file_natbee_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddRequest.ProtoReflect.Descriptor instead.
func (*AddRequest) Descriptor() ([]byte, []int) {
	return file_natbee_proto_rawDescGZIP(), []int{4}
}

func (x *AddRequest) GetType() ServiceType {
	if x != nil {
		return x.Type
	}
	return ServiceType_DEFAULT
}

func (x *AddRequest) GetKey() *ServiceKey {
	if x != nil {
		return x.Key
	}
	return nil
}

func (x *AddRequest) GetVal() *ServiceAttr {
	if x != nil {
		return x.Val
	}
	return nil
}

type DelRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type ServiceType `protobuf:"varint,1,opt,name=type,proto3,enum=natbeeapi.ServiceType" json:"type,omitempty"`
	Key  *ServiceKey `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
}

func (x *DelRequest) Reset() {
	*x = DelRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_natbee_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelRequest) ProtoMessage() {}

func (x *DelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_natbee_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelRequest.ProtoReflect.Descriptor instead.
func (*DelRequest) Descriptor() ([]byte, []int) {
	return file_natbee_proto_rawDescGZIP(), []int{5}
}

func (x *DelRequest) GetType() ServiceType {
	if x != nil {
		return x.Type
	}
	return ServiceType_DEFAULT
}

func (x *DelRequest) GetKey() *ServiceKey {
	if x != nil {
		return x.Key
	}
	return nil
}

type AttachRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type ServiceType `protobuf:"varint,1,opt,name=type,proto3,enum=natbeeapi.ServiceType" json:"type,omitempty"`
	Ip   string      `protobuf:"bytes,2,opt,name=ip,proto3" json:"ip,omitempty"`
}

func (x *AttachRequest) Reset() {
	*x = AttachRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_natbee_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AttachRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AttachRequest) ProtoMessage() {}

func (x *AttachRequest) ProtoReflect() protoreflect.Message {
	mi := &file_natbee_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AttachRequest.ProtoReflect.Descriptor instead.
func (*AttachRequest) Descriptor() ([]byte, []int) {
	return file_natbee_proto_rawDescGZIP(), []int{6}
}

func (x *AttachRequest) GetType() ServiceType {
	if x != nil {
		return x.Type
	}
	return ServiceType_DEFAULT
}

func (x *AttachRequest) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

type SaveReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FilePath string `protobuf:"bytes,1,opt,name=file_path,json=filePath,proto3" json:"file_path,omitempty"`
}

func (x *SaveReq) Reset() {
	*x = SaveReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_natbee_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SaveReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaveReq) ProtoMessage() {}

func (x *SaveReq) ProtoReflect() protoreflect.Message {
	mi := &file_natbee_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaveReq.ProtoReflect.Descriptor instead.
func (*SaveReq) Descriptor() ([]byte, []int) {
	return file_natbee_proto_rawDescGZIP(), []int{7}
}

func (x *SaveReq) GetFilePath() string {
	if x != nil {
		return x.FilePath
	}
	return ""
}

type PollRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type ServiceType `protobuf:"varint,1,opt,name=type,proto3,enum=natbeeapi.ServiceType" json:"type,omitempty"`
}

func (x *PollRequest) Reset() {
	*x = PollRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_natbee_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PollRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PollRequest) ProtoMessage() {}

func (x *PollRequest) ProtoReflect() protoreflect.Message {
	mi := &file_natbee_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PollRequest.ProtoReflect.Descriptor instead.
func (*PollRequest) Descriptor() ([]byte, []int) {
	return file_natbee_proto_rawDescGZIP(), []int{8}
}

func (x *PollRequest) GetType() ServiceType {
	if x != nil {
		return x.Type
	}
	return ServiceType_DEFAULT
}

type PollResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NatSessions    []*Session `protobuf:"bytes,1,rep,name=nat_sessions,json=natSessions,proto3" json:"nat_sessions,omitempty"`
	FnatSessions   []*Session `protobuf:"bytes,2,rep,name=fnat_sessions,json=fnatSessions,proto3" json:"fnat_sessions,omitempty"`
	TransportGroup string     `protobuf:"bytes,12,opt,name=transport_group,json=transportGroup,proto3" json:"transport_group,omitempty"`
	Version        string     `protobuf:"bytes,13,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *PollResponse) Reset() {
	*x = PollResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_natbee_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PollResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PollResponse) ProtoMessage() {}

func (x *PollResponse) ProtoReflect() protoreflect.Message {
	mi := &file_natbee_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PollResponse.ProtoReflect.Descriptor instead.
func (*PollResponse) Descriptor() ([]byte, []int) {
	return file_natbee_proto_rawDescGZIP(), []int{9}
}

func (x *PollResponse) GetNatSessions() []*Session {
	if x != nil {
		return x.NatSessions
	}
	return nil
}

func (x *PollResponse) GetFnatSessions() []*Session {
	if x != nil {
		return x.FnatSessions
	}
	return nil
}

func (x *PollResponse) GetTransportGroup() string {
	if x != nil {
		return x.TransportGroup
	}
	return ""
}

func (x *PollResponse) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

type PushRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NatSessions    []*Session `protobuf:"bytes,1,rep,name=nat_sessions,json=natSessions,proto3" json:"nat_sessions,omitempty"`
	FnatSessions   []*Session `protobuf:"bytes,2,rep,name=fnat_sessions,json=fnatSessions,proto3" json:"fnat_sessions,omitempty"`
	TransportGroup string     `protobuf:"bytes,12,opt,name=transport_group,json=transportGroup,proto3" json:"transport_group,omitempty"`
	Version        string     `protobuf:"bytes,13,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *PushRequest) Reset() {
	*x = PushRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_natbee_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PushRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PushRequest) ProtoMessage() {}

func (x *PushRequest) ProtoReflect() protoreflect.Message {
	mi := &file_natbee_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PushRequest.ProtoReflect.Descriptor instead.
func (*PushRequest) Descriptor() ([]byte, []int) {
	return file_natbee_proto_rawDescGZIP(), []int{10}
}

func (x *PushRequest) GetNatSessions() []*Session {
	if x != nil {
		return x.NatSessions
	}
	return nil
}

func (x *PushRequest) GetFnatSessions() []*Session {
	if x != nil {
		return x.FnatSessions
	}
	return nil
}

func (x *PushRequest) GetTransportGroup() string {
	if x != nil {
		return x.TransportGroup
	}
	return ""
}

func (x *PushRequest) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

var File_natbee_proto protoreflect.FileDescriptor

var file_natbee_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x6e, 0x61, 0x74, 0x62, 0x65, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x09,
	0x6e, 0x61, 0x74, 0x62, 0x65, 0x65, 0x61, 0x70, 0x69, 0x22, 0x07, 0x0a, 0x05, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x22, 0x61, 0x0a, 0x0a, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4b, 0x65, 0x79,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x70,
	0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04,
	0x70, 0x6f, 0x72, 0x74, 0x12, 0x2f, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x6e, 0x61, 0x74, 0x62, 0x65, 0x65, 0x61,
	0x70, 0x69, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x52, 0x08, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x22, 0xaa, 0x02, 0x0a, 0x07, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x70, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x70, 0x12, 0x1f,
	0x0a, 0x0b, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x0a, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x50, 0x6f, 0x72, 0x74, 0x12,
	0x1d, 0x0a, 0x0a, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x5f, 0x69, 0x70, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x49, 0x70, 0x12, 0x21,
	0x0a, 0x0c, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x50, 0x6f, 0x72,
	0x74, 0x12, 0x19, 0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x5f, 0x69, 0x70, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x49, 0x70, 0x12, 0x1d, 0x0a, 0x0a,
	0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x09, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x50, 0x6f, 0x72, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x72,
	0x65, 0x61, 0x6c, 0x5f, 0x69, 0x70, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65,
	0x61, 0x6c, 0x49, 0x70, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x65, 0x61, 0x6c, 0x5f, 0x70, 0x6f, 0x72,
	0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x72, 0x65, 0x61, 0x6c, 0x50, 0x6f, 0x72,
	0x74, 0x12, 0x2f, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x6e, 0x61, 0x74, 0x62, 0x65, 0x65, 0x61, 0x70, 0x69, 0x2e,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63,
	0x6f, 0x6c, 0x22, 0x6d, 0x0a, 0x0b, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x41, 0x74, 0x74,
	0x72, 0x12, 0x19, 0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x5f, 0x69, 0x70, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x49, 0x70, 0x12, 0x1b, 0x0a, 0x09,
	0x72, 0x65, 0x61, 0x6c, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x08, 0x72, 0x65, 0x61, 0x6c, 0x50, 0x6f, 0x72, 0x74, 0x12, 0x26, 0x0a, 0x0f, 0x72, 0x65, 0x61,
	0x6c, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x69, 0x70, 0x73, 0x18, 0x05, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x0d, 0x72, 0x65, 0x61, 0x6c, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x70,
	0x73, 0x22, 0x8b, 0x01, 0x0a, 0x0a, 0x41, 0x64, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x2a, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16,
	0x2e, 0x6e, 0x61, 0x74, 0x62, 0x65, 0x65, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x27, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6e, 0x61, 0x74, 0x62,
	0x65, 0x65, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4b, 0x65, 0x79,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x28, 0x0a, 0x03, 0x76, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6e, 0x61, 0x74, 0x62, 0x65, 0x65, 0x61, 0x70, 0x69, 0x2e, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x41, 0x74, 0x74, 0x72, 0x52, 0x03, 0x76, 0x61, 0x6c, 0x22,
	0x61, 0x0a, 0x0a, 0x44, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2a, 0x0a,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x6e, 0x61,
	0x74, 0x62, 0x65, 0x65, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x27, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6e, 0x61, 0x74, 0x62, 0x65, 0x65, 0x61,
	0x70, 0x69, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4b, 0x65, 0x79, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x22, 0x4b, 0x0a, 0x0d, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x2a, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x16, 0x2e, 0x6e, 0x61, 0x74, 0x62, 0x65, 0x65, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x70, 0x22,
	0x26, 0x0a, 0x07, 0x53, 0x61, 0x76, 0x65, 0x52, 0x65, 0x71, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x69,
	0x6c, 0x65, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66,
	0x69, 0x6c, 0x65, 0x50, 0x61, 0x74, 0x68, 0x22, 0x39, 0x0a, 0x0b, 0x50, 0x6f, 0x6c, 0x6c, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2a, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x6e, 0x61, 0x74, 0x62, 0x65, 0x65, 0x61, 0x70, 0x69,
	0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x22, 0xc1, 0x01, 0x0a, 0x0c, 0x50, 0x6f, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x35, 0x0a, 0x0c, 0x6e, 0x61, 0x74, 0x5f, 0x73, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6e, 0x61, 0x74, 0x62,
	0x65, 0x65, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x6e,
	0x61, 0x74, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x37, 0x0a, 0x0d, 0x66, 0x6e,
	0x61, 0x74, 0x5f, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x12, 0x2e, 0x6e, 0x61, 0x74, 0x62, 0x65, 0x65, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x0c, 0x66, 0x6e, 0x61, 0x74, 0x53, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x73, 0x12, 0x27, 0x0a, 0x0f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74,
	0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x74, 0x72,
	0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x18, 0x0a, 0x07,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0xc0, 0x01, 0x0a, 0x0b, 0x50, 0x75, 0x73, 0x68, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x35, 0x0a, 0x0c, 0x6e, 0x61, 0x74, 0x5f, 0x73, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6e,
	0x61, 0x74, 0x62, 0x65, 0x65, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x52, 0x0b, 0x6e, 0x61, 0x74, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x37, 0x0a,
	0x0d, 0x66, 0x6e, 0x61, 0x74, 0x5f, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6e, 0x61, 0x74, 0x62, 0x65, 0x65, 0x61, 0x70, 0x69,
	0x2e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x0c, 0x66, 0x6e, 0x61, 0x74, 0x53, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x27, 0x0a, 0x0f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70,
	0x6f, 0x72, 0x74, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12,
	0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x2a, 0x2d, 0x0a, 0x0b, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x44, 0x45, 0x46, 0x41,
	0x55, 0x4c, 0x54, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x4e, 0x41, 0x54, 0x10, 0x01, 0x12, 0x08,
	0x0a, 0x04, 0x46, 0x4e, 0x41, 0x54, 0x10, 0x02, 0x2a, 0x29, 0x0a, 0x08, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x63, 0x6f, 0x6c, 0x12, 0x0b, 0x0a, 0x07, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x10,
	0x00, 0x12, 0x07, 0x0a, 0x03, 0x54, 0x43, 0x50, 0x10, 0x06, 0x12, 0x07, 0x0a, 0x03, 0x55, 0x44,
	0x50, 0x10, 0x11, 0x32, 0xfe, 0x02, 0x0a, 0x09, 0x4e, 0x61, 0x74, 0x42, 0x65, 0x65, 0x41, 0x70,
	0x69, 0x12, 0x34, 0x0a, 0x06, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x12, 0x18, 0x2e, 0x6e, 0x61,
	0x74, 0x62, 0x65, 0x65, 0x61, 0x70, 0x69, 0x2e, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x10, 0x2e, 0x6e, 0x61, 0x74, 0x62, 0x65, 0x65, 0x61, 0x70,
	0x69, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x34, 0x0a, 0x06, 0x44, 0x65, 0x74, 0x61, 0x63,
	0x68, 0x12, 0x18, 0x2e, 0x6e, 0x61, 0x74, 0x62, 0x65, 0x65, 0x61, 0x70, 0x69, 0x2e, 0x41, 0x74,
	0x74, 0x61, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x10, 0x2e, 0x6e, 0x61,
	0x74, 0x62, 0x65, 0x65, 0x61, 0x70, 0x69, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x35, 0x0a,
	0x0a, 0x41, 0x64, 0x64, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x15, 0x2e, 0x6e, 0x61,
	0x74, 0x62, 0x65, 0x65, 0x61, 0x70, 0x69, 0x2e, 0x41, 0x64, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x10, 0x2e, 0x6e, 0x61, 0x74, 0x62, 0x65, 0x65, 0x61, 0x70, 0x69, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x12, 0x35, 0x0a, 0x0a, 0x44, 0x65, 0x6c, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x12, 0x15, 0x2e, 0x6e, 0x61, 0x74, 0x62, 0x65, 0x65, 0x61, 0x70, 0x69, 0x2e, 0x44,
	0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x10, 0x2e, 0x6e, 0x61, 0x74, 0x62,
	0x65, 0x65, 0x61, 0x70, 0x69, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x2c, 0x0a, 0x04, 0x53,
	0x61, 0x76, 0x65, 0x12, 0x12, 0x2e, 0x6e, 0x61, 0x74, 0x62, 0x65, 0x65, 0x61, 0x70, 0x69, 0x2e,
	0x53, 0x61, 0x76, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x10, 0x2e, 0x6e, 0x61, 0x74, 0x62, 0x65, 0x65,
	0x61, 0x70, 0x69, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x37, 0x0a, 0x04, 0x50, 0x6f, 0x6c,
	0x6c, 0x12, 0x16, 0x2e, 0x6e, 0x61, 0x74, 0x62, 0x65, 0x65, 0x61, 0x70, 0x69, 0x2e, 0x50, 0x6f,
	0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x6e, 0x61, 0x74, 0x62,
	0x65, 0x65, 0x61, 0x70, 0x69, 0x2e, 0x50, 0x6f, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x30, 0x0a, 0x04, 0x50, 0x75, 0x73, 0x68, 0x12, 0x16, 0x2e, 0x6e, 0x61, 0x74,
	0x62, 0x65, 0x65, 0x61, 0x70, 0x69, 0x2e, 0x50, 0x75, 0x73, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x10, 0x2e, 0x6e, 0x61, 0x74, 0x62, 0x65, 0x65, 0x61, 0x70, 0x69, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_natbee_proto_rawDescOnce sync.Once
	file_natbee_proto_rawDescData = file_natbee_proto_rawDesc
)

func file_natbee_proto_rawDescGZIP() []byte {
	file_natbee_proto_rawDescOnce.Do(func() {
		file_natbee_proto_rawDescData = protoimpl.X.CompressGZIP(file_natbee_proto_rawDescData)
	})
	return file_natbee_proto_rawDescData
}

var file_natbee_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_natbee_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_natbee_proto_goTypes = []interface{}{
	(ServiceType)(0),      // 0: natbeeapi.ServiceType
	(Protocol)(0),         // 1: natbeeapi.Protocol
	(*Empty)(nil),         // 2: natbeeapi.Empty
	(*ServiceKey)(nil),    // 3: natbeeapi.ServiceKey
	(*Session)(nil),       // 4: natbeeapi.Session
	(*ServiceAttr)(nil),   // 5: natbeeapi.ServiceAttr
	(*AddRequest)(nil),    // 6: natbeeapi.AddRequest
	(*DelRequest)(nil),    // 7: natbeeapi.DelRequest
	(*AttachRequest)(nil), // 8: natbeeapi.AttachRequest
	(*SaveReq)(nil),       // 9: natbeeapi.SaveReq
	(*PollRequest)(nil),   // 10: natbeeapi.PollRequest
	(*PollResponse)(nil),  // 11: natbeeapi.PollResponse
	(*PushRequest)(nil),   // 12: natbeeapi.PushRequest
}
var file_natbee_proto_depIdxs = []int32{
	1,  // 0: natbeeapi.ServiceKey.protocol:type_name -> natbeeapi.Protocol
	1,  // 1: natbeeapi.Session.protocol:type_name -> natbeeapi.Protocol
	0,  // 2: natbeeapi.AddRequest.type:type_name -> natbeeapi.ServiceType
	3,  // 3: natbeeapi.AddRequest.key:type_name -> natbeeapi.ServiceKey
	5,  // 4: natbeeapi.AddRequest.val:type_name -> natbeeapi.ServiceAttr
	0,  // 5: natbeeapi.DelRequest.type:type_name -> natbeeapi.ServiceType
	3,  // 6: natbeeapi.DelRequest.key:type_name -> natbeeapi.ServiceKey
	0,  // 7: natbeeapi.AttachRequest.type:type_name -> natbeeapi.ServiceType
	0,  // 8: natbeeapi.PollRequest.type:type_name -> natbeeapi.ServiceType
	4,  // 9: natbeeapi.PollResponse.nat_sessions:type_name -> natbeeapi.Session
	4,  // 10: natbeeapi.PollResponse.fnat_sessions:type_name -> natbeeapi.Session
	4,  // 11: natbeeapi.PushRequest.nat_sessions:type_name -> natbeeapi.Session
	4,  // 12: natbeeapi.PushRequest.fnat_sessions:type_name -> natbeeapi.Session
	8,  // 13: natbeeapi.NatBeeApi.Attach:input_type -> natbeeapi.AttachRequest
	8,  // 14: natbeeapi.NatBeeApi.Detach:input_type -> natbeeapi.AttachRequest
	6,  // 15: natbeeapi.NatBeeApi.AddService:input_type -> natbeeapi.AddRequest
	7,  // 16: natbeeapi.NatBeeApi.DelService:input_type -> natbeeapi.DelRequest
	9,  // 17: natbeeapi.NatBeeApi.Save:input_type -> natbeeapi.SaveReq
	10, // 18: natbeeapi.NatBeeApi.Poll:input_type -> natbeeapi.PollRequest
	12, // 19: natbeeapi.NatBeeApi.Push:input_type -> natbeeapi.PushRequest
	2,  // 20: natbeeapi.NatBeeApi.Attach:output_type -> natbeeapi.Empty
	2,  // 21: natbeeapi.NatBeeApi.Detach:output_type -> natbeeapi.Empty
	2,  // 22: natbeeapi.NatBeeApi.AddService:output_type -> natbeeapi.Empty
	2,  // 23: natbeeapi.NatBeeApi.DelService:output_type -> natbeeapi.Empty
	2,  // 24: natbeeapi.NatBeeApi.Save:output_type -> natbeeapi.Empty
	11, // 25: natbeeapi.NatBeeApi.Poll:output_type -> natbeeapi.PollResponse
	2,  // 26: natbeeapi.NatBeeApi.Push:output_type -> natbeeapi.Empty
	20, // [20:27] is the sub-list for method output_type
	13, // [13:20] is the sub-list for method input_type
	13, // [13:13] is the sub-list for extension type_name
	13, // [13:13] is the sub-list for extension extendee
	0,  // [0:13] is the sub-list for field type_name
}

func init() { file_natbee_proto_init() }
func file_natbee_proto_init() {
	if File_natbee_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_natbee_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Empty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_natbee_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServiceKey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_natbee_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Session); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_natbee_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServiceAttr); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_natbee_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_natbee_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_natbee_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AttachRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_natbee_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SaveReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_natbee_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PollRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_natbee_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PollResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_natbee_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PushRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_natbee_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_natbee_proto_goTypes,
		DependencyIndexes: file_natbee_proto_depIdxs,
		EnumInfos:         file_natbee_proto_enumTypes,
		MessageInfos:      file_natbee_proto_msgTypes,
	}.Build()
	File_natbee_proto = out.File
	file_natbee_proto_rawDesc = nil
	file_natbee_proto_goTypes = nil
	file_natbee_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// NatBeeApiClient is the client API for NatBeeApi service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type NatBeeApiClient interface {
	Attach(ctx context.Context, in *AttachRequest, opts ...grpc.CallOption) (*Empty, error)
	Detach(ctx context.Context, in *AttachRequest, opts ...grpc.CallOption) (*Empty, error)
	AddService(ctx context.Context, in *AddRequest, opts ...grpc.CallOption) (*Empty, error)
	DelService(ctx context.Context, in *DelRequest, opts ...grpc.CallOption) (*Empty, error)
	Save(ctx context.Context, in *SaveReq, opts ...grpc.CallOption) (*Empty, error)
	Poll(ctx context.Context, in *PollRequest, opts ...grpc.CallOption) (*PollResponse, error)
	Push(ctx context.Context, in *PushRequest, opts ...grpc.CallOption) (*Empty, error)
}

type natBeeApiClient struct {
	cc grpc.ClientConnInterface
}

func NewNatBeeApiClient(cc grpc.ClientConnInterface) NatBeeApiClient {
	return &natBeeApiClient{cc}
}

func (c *natBeeApiClient) Attach(ctx context.Context, in *AttachRequest, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/natbeeapi.NatBeeApi/Attach", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *natBeeApiClient) Detach(ctx context.Context, in *AttachRequest, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/natbeeapi.NatBeeApi/Detach", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *natBeeApiClient) AddService(ctx context.Context, in *AddRequest, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/natbeeapi.NatBeeApi/AddService", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *natBeeApiClient) DelService(ctx context.Context, in *DelRequest, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/natbeeapi.NatBeeApi/DelService", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *natBeeApiClient) Save(ctx context.Context, in *SaveReq, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/natbeeapi.NatBeeApi/Save", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *natBeeApiClient) Poll(ctx context.Context, in *PollRequest, opts ...grpc.CallOption) (*PollResponse, error) {
	out := new(PollResponse)
	err := c.cc.Invoke(ctx, "/natbeeapi.NatBeeApi/Poll", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *natBeeApiClient) Push(ctx context.Context, in *PushRequest, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/natbeeapi.NatBeeApi/Push", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// NatBeeApiServer is the server API for NatBeeApi service.
type NatBeeApiServer interface {
	Attach(context.Context, *AttachRequest) (*Empty, error)
	Detach(context.Context, *AttachRequest) (*Empty, error)
	AddService(context.Context, *AddRequest) (*Empty, error)
	DelService(context.Context, *DelRequest) (*Empty, error)
	Save(context.Context, *SaveReq) (*Empty, error)
	Poll(context.Context, *PollRequest) (*PollResponse, error)
	Push(context.Context, *PushRequest) (*Empty, error)
}

// UnimplementedNatBeeApiServer can be embedded to have forward compatible implementations.
type UnimplementedNatBeeApiServer struct {
}

func (*UnimplementedNatBeeApiServer) Attach(context.Context, *AttachRequest) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Attach not implemented")
}
func (*UnimplementedNatBeeApiServer) Detach(context.Context, *AttachRequest) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Detach not implemented")
}
func (*UnimplementedNatBeeApiServer) AddService(context.Context, *AddRequest) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddService not implemented")
}
func (*UnimplementedNatBeeApiServer) DelService(context.Context, *DelRequest) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DelService not implemented")
}
func (*UnimplementedNatBeeApiServer) Save(context.Context, *SaveReq) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Save not implemented")
}
func (*UnimplementedNatBeeApiServer) Poll(context.Context, *PollRequest) (*PollResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Poll not implemented")
}
func (*UnimplementedNatBeeApiServer) Push(context.Context, *PushRequest) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Push not implemented")
}

func RegisterNatBeeApiServer(s *grpc.Server, srv NatBeeApiServer) {
	s.RegisterService(&_NatBeeApi_serviceDesc, srv)
}

func _NatBeeApi_Attach_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AttachRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NatBeeApiServer).Attach(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/natbeeapi.NatBeeApi/Attach",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NatBeeApiServer).Attach(ctx, req.(*AttachRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NatBeeApi_Detach_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AttachRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NatBeeApiServer).Detach(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/natbeeapi.NatBeeApi/Detach",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NatBeeApiServer).Detach(ctx, req.(*AttachRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NatBeeApi_AddService_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NatBeeApiServer).AddService(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/natbeeapi.NatBeeApi/AddService",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NatBeeApiServer).AddService(ctx, req.(*AddRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NatBeeApi_DelService_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DelRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NatBeeApiServer).DelService(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/natbeeapi.NatBeeApi/DelService",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NatBeeApiServer).DelService(ctx, req.(*DelRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NatBeeApi_Save_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SaveReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NatBeeApiServer).Save(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/natbeeapi.NatBeeApi/Save",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NatBeeApiServer).Save(ctx, req.(*SaveReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _NatBeeApi_Poll_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PollRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NatBeeApiServer).Poll(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/natbeeapi.NatBeeApi/Poll",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NatBeeApiServer).Poll(ctx, req.(*PollRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NatBeeApi_Push_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PushRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NatBeeApiServer).Push(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/natbeeapi.NatBeeApi/Push",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NatBeeApiServer).Push(ctx, req.(*PushRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _NatBeeApi_serviceDesc = grpc.ServiceDesc{
	ServiceName: "natbeeapi.NatBeeApi",
	HandlerType: (*NatBeeApiServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Attach",
			Handler:    _NatBeeApi_Attach_Handler,
		},
		{
			MethodName: "Detach",
			Handler:    _NatBeeApi_Detach_Handler,
		},
		{
			MethodName: "AddService",
			Handler:    _NatBeeApi_AddService_Handler,
		},
		{
			MethodName: "DelService",
			Handler:    _NatBeeApi_DelService_Handler,
		},
		{
			MethodName: "Save",
			Handler:    _NatBeeApi_Save_Handler,
		},
		{
			MethodName: "Poll",
			Handler:    _NatBeeApi_Poll_Handler,
		},
		{
			MethodName: "Push",
			Handler:    _NatBeeApi_Push_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "natbee.proto",
}
